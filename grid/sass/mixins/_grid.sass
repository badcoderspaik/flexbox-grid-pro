// превращает элемент в контейнер сетки

// превращает элемент в строку сетки

/*
 *  Превращает элемент в ячейку сетки размером в $cols колонок.
 *  Если при вызове примеси не передан ни один аргумент, к элементу будут применены правила, согласно которым элемент
 *  будет компоноваться как флекс-элемент и будет занимать пространство, равное занимаемому пространству соседними
 *  флекс-элментами
 *
 *  Если при вызове примеси переданы оба аргумента и при этом тип первого аргумента $cols - число, а значение второго
 *  аргумента соответвствует одному из имен свойств глобального объекта $grid-breakpoints, то правило применяется только
 *  в медиазапросе, значение которого берется из этого второго аргумента. При этом в качестве значения второго аргумента
 *  должно использоваться одно из имен ключей глобального объекта $grid-breakpoints
 *
 *  Если же передан только первый аргумент или значение второго аргумента не соответствует
 *  ни одному из имен ключей глобального объекта $grid-breakpoints, то элемент будет просто занимать количество ячеек,
 *  равное $cols*/
// рассчитывает ширину столбца в зависимости от переданного количества столбцов $cols

/*
 *Генерирует "колоночные" классы вида .col-1, .col-2, .col-3 и т.д. исходя из глабальной переменной $columns - заданного
 *количества колонок сетки*/
/*
 *Генерирует "колоночный" класс сетки вида .col-tablet-8 и css-правила для него в медиазапросе исходя из $cols - числа
 *столбцов, $screen-width - ширины экрана и $name - названия брейкпойнта, значение которого должно соответсвовать одному
 *из имен ключей глобального объекта $grid-breakpoints*/
/*
 *Генерирует "колоночные" классы сетки и css-правила для них в медиазапросе исходя из глобальной переменной
 *$columns - заданного количества колонок сетки и глобальной переменной $grid-breakpoints - объекта с брейкпойнтами*/
// обнуляет внешние отступы у строки сетки и ее потомков колонок